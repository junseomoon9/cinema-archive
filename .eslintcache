[{"C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\index.js":"1","C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\App.js":"2","C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\reportWebVitals.js":"3","C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\components\\Header.js":"4","C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\components\\TVshows.js":"5","C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\components\\Movies.js":"6","C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\components\\Watchlist.js":"7","C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\components\\ResultCard.js":"8","C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\context\\GlobalContext.js":"9","C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\context\\AppReducer.js":"10","C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\components\\WatchlistCard.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":861,"mtime":1610150739533,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":920,"mtime":1610158325644,"results":"16","hashOfConfig":"13"},{"size":2552,"mtime":1610142301670,"results":"17","hashOfConfig":"13"},{"size":2559,"mtime":1610228597709,"results":"18","hashOfConfig":"13"},{"size":784,"mtime":1610461975999,"results":"19","hashOfConfig":"13"},{"size":666,"mtime":1610228588720,"results":"20","hashOfConfig":"13"},{"size":1075,"mtime":1610462884046,"results":"21","hashOfConfig":"13"},{"size":469,"mtime":1610230104399,"results":"22","hashOfConfig":"13"},{"size":549,"mtime":1610229639089,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1mc92dj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\index.js",[],["50","51"],"C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\App.js",[],"C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\reportWebVitals.js",[],"C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\components\\Header.js",[],"C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\components\\TVshows.js",["52"],"import React, {useState, useEffect} from 'react'\r\nimport {FaSistrix} from 'react-icons/fa'\r\nimport { ResultCard } from './ResultCard';\r\n\r\nexport const TVshows = () => {\r\n    \r\n    const [query, setQuery] = useState(\"\")\r\n    const [results, setResults] = useState([])\r\n    const [count, setCount] = useState(2)\r\n\r\n    const fetchData = async (count) =>{\r\n        let response = await fetch(`https://api.themoviedb.org/3/tv/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=${count}&include_adult=false`)\r\n        let data = await response.json();\r\n        let refinedResults = filterNullPictures(data.results)\r\n        setResults(results.concat(refinedResults))\r\n    }\r\n\r\n    const handleQueryChange = e => {\r\n        setQuery(e.target.value)\r\n    }\r\n\r\n    const fetchSearchData = async (e) => {\r\n        e.preventDefault();\r\n        let response = await fetch(`https://api.themoviedb.org/3/search/tv?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false&query=${query}`)\r\n        let data = await response.json();\r\n        let refinedResults = filterNullPictures(data.results)\r\n        setResults(refinedResults)\r\n    }\r\n    \r\n\r\n    const filterNullPictures = (results) => {\r\n        const filteredList = results.filter(show => show.poster_path !== null)\r\n        return filteredList\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData(2)\r\n    }, [])\r\n\r\n    const handleLoadMore = () => {\r\n        setCount(count + 1);\r\n        fetchData(count + 1)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"search\">\r\n                    <form onSubmit={fetchSearchData}>\r\n                        <div className=\"search-form\">\r\n                            <input type=\"text\" placeholder=\"Search\" onChange={handleQueryChange} />\r\n                            <div className=\"search-icon\">\r\n                                <FaSistrix/>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"inner-container\">\r\n                    {results.map(show => (\r\n                        \r\n                        <ResultCard result={show} key={show.id}/>\r\n                        \r\n                    ))}\r\n                </div>\r\n                <div className=\"load-btn-container\">\r\n                    <button className=\"load-btn\" onClick={handleLoadMore}>Load More</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\components\\Movies.js",["53"],"import React, {useState, useEffect} from 'react'\r\nimport {FaSistrix} from 'react-icons/fa'\r\nimport { ResultCard } from './ResultCard';\r\n\r\n\r\nexport const Movies = () => {\r\n    \r\n    const [query, setQuery] = useState(\"\")\r\n    const [results, setResults] = useState([])\r\n    const [count, setCount] = useState(2)\r\n    \r\n\r\n    async function fetchData(count){\r\n        let response = await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=${count}&include_adult=false`)\r\n        let data = await response.json();\r\n        let refinedResults = filterNullPictures(data.results)\r\n        setResults(results.concat(refinedResults))\r\n    }\r\n\r\n    function handleQueryChange(e) {\r\n        setQuery(e.target.value)\r\n    }\r\n\r\n    const fetchSearchData = async (e) => {\r\n        e.preventDefault();\r\n        let response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false&query=${query}`)\r\n        let data = await response.json()\r\n        let refinedResults = filterNullPictures(data.results)\r\n        setResults(refinedResults)\r\n    }\r\n\r\n    const filterNullPictures = (results) => {\r\n        const filteredList = results.filter(movie => movie.poster_path !== null)\r\n        return filteredList\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData(2)\r\n    }, [])\r\n\r\n    const handleLoadMore = () => {\r\n        setCount(count + 1);\r\n        fetchData(count + 1)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"search\">\r\n                    <form onSubmit={fetchSearchData}>\r\n                        <div className=\"search-form\">\r\n                            <input type=\"text\" placeholder=\"Search\" onChange={handleQueryChange}/>\r\n                            <div className=\"search-icon\">\r\n                                <FaSistrix/>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"inner-container\">\r\n                    {results.map(movie => (\r\n                        \r\n                        <ResultCard result={movie} id={movie.id}/>\r\n                        \r\n                    ))}\r\n                </div>\r\n                <div className=\"load-btn-container\">\r\n                    <button className=\"load-btn\" onClick={handleLoadMore}>Load More</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\components\\Watchlist.js",[],"C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\components\\ResultCard.js",[],"C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\context\\GlobalContext.js",[],"C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\context\\AppReducer.js",["54"],"export default (state, action) => {\r\n    switch (action.type) {\r\n      case \"ADD_MEDIA_TO_WATCHLIST\":\r\n        return {\r\n          ...state,\r\n          watchlist: [action.payload, ...state.watchlist],\r\n        };\r\n      case \"REMOVE_MEDIA_FROM_WATCHLIST\":\r\n        return {\r\n          ...state,\r\n          watchlist: state.watchlist.filter(\r\n            (media) => media.id !== action.payload\r\n          ),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n}\r\n","C:\\Users\\Alan Moon\\Documents\\GitHub\\cinema-archive\\cinema-archive\\src\\components\\WatchlistCard.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":38,"column":8,"nodeType":"61","endLine":38,"endColumn":10,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"60","line":39,"column":8,"nodeType":"61","endLine":39,"endColumn":10,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":1,"nodeType":"66","endLine":18,"endColumn":2},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["69"],["70"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"71","fix":"73"},"Update the dependencies array to be: [fetchData]",{"range":"74","text":"75"},{"range":"76","text":"75"},[1396,1398],"[fetchData]",[1402,1404]]